server.port=8080

#H2 Database setting
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:~/local
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.h2.console.settings.web-allow-others=true

#password를 비워둬 비밀번호를 생략한다

#DB파일명
#jdbc:h2:~/local : local.mv.db
#jdbc:h2:~/test : test.mv.db



#JPA 환경설정
#데이터베이스 엔진 종류 설정(하이버네이트의 엔진 사용)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

#엔티티를 기준으로 테이블을 생성하는 규칙을 지정
spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true

#none - 엔티티가 변경되더라도 데이터베이스를 변경하지 않는다.
#update - 엔티티의 변경된 부분만 적용한다.
#validate - 변경사항이 있는지 검사만 한다.
#create - 스프링부트 서버가 시작될때 모두 drop하고 다시 생성한다.
#create-drop - create와 동일하다. 하지만 종료시에도 모두 drop 한다.
#
#개발:update, 운영:none,validate
#운영할 땐 db가 변동되면 안되므로 둘 중 하나 사용)

